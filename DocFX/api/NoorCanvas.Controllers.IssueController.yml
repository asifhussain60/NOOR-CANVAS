### YamlMime:ManagedReference
items:
- uid: NoorCanvas.Controllers.IssueController
  commentId: T:NoorCanvas.Controllers.IssueController
  id: IssueController
  parent: NoorCanvas.Controllers
  children:
  - NoorCanvas.Controllers.IssueController.#ctor(NoorCanvas.Data.CanvasDbContext,ILogger{NoorCanvas.Controllers.IssueController})
  - NoorCanvas.Controllers.IssueController.CreateIssue(NoorCanvas.Controllers.CreateIssueRequest)
  - NoorCanvas.Controllers.IssueController.GetIssue(System.Int64)
  - NoorCanvas.Controllers.IssueController.GetIssues(System.String,System.String,System.String)
  langs:
  - csharp
  - vb
  name: IssueController
  nameWithType: IssueController
  fullName: NoorCanvas.Controllers.IssueController
  type: Class
  source:
    remote:
      path: SPA/NoorCanvas/Controllers/IssueController.cs
      branch: master
      repo: https://github.com/asifhussain60/NOOR-CANVAS.git
    id: IssueController
    path: ../SPA/NoorCanvas/Controllers/IssueController.cs
    startLine: 8
  namespace: NoorCanvas.Controllers
  syntax:
    content: 'public class IssueController : ControllerBase'
    content.vb: Public Class IssueController Inherits ControllerBase
  inheritance:
  - System.Object
- uid: NoorCanvas.Controllers.IssueController.#ctor(NoorCanvas.Data.CanvasDbContext,ILogger{NoorCanvas.Controllers.IssueController})
  commentId: M:NoorCanvas.Controllers.IssueController.#ctor(NoorCanvas.Data.CanvasDbContext,ILogger{NoorCanvas.Controllers.IssueController})
  id: '#ctor(NoorCanvas.Data.CanvasDbContext,ILogger{NoorCanvas.Controllers.IssueController})'
  parent: NoorCanvas.Controllers.IssueController
  langs:
  - csharp
  - vb
  name: IssueController(CanvasDbContext, ILogger<IssueController>)
  nameWithType: IssueController.IssueController(CanvasDbContext, ILogger<IssueController>)
  fullName: NoorCanvas.Controllers.IssueController.IssueController(NoorCanvas.Data.CanvasDbContext, ILogger<NoorCanvas.Controllers.IssueController>)
  type: Constructor
  source:
    remote:
      path: SPA/NoorCanvas/Controllers/IssueController.cs
      branch: master
      repo: https://github.com/asifhussain60/NOOR-CANVAS.git
    id: .ctor
    path: ../SPA/NoorCanvas/Controllers/IssueController.cs
    startLine: 15
  namespace: NoorCanvas.Controllers
  syntax:
    content: public IssueController(CanvasDbContext context, ILogger<IssueController> logger)
    parameters:
    - id: context
      type: NoorCanvas.Data.CanvasDbContext
    - id: logger
      type: ILogger{NoorCanvas.Controllers.IssueController}
    content.vb: Public Sub New(context As CanvasDbContext, logger As ILogger(Of IssueController))
  overload: NoorCanvas.Controllers.IssueController.#ctor*
  nameWithType.vb: IssueController.New(CanvasDbContext, ILogger(Of IssueController))
  fullName.vb: NoorCanvas.Controllers.IssueController.New(NoorCanvas.Data.CanvasDbContext, ILogger(Of NoorCanvas.Controllers.IssueController))
  name.vb: New(CanvasDbContext, ILogger(Of IssueController))
- uid: NoorCanvas.Controllers.IssueController.CreateIssue(NoorCanvas.Controllers.CreateIssueRequest)
  commentId: M:NoorCanvas.Controllers.IssueController.CreateIssue(NoorCanvas.Controllers.CreateIssueRequest)
  id: CreateIssue(NoorCanvas.Controllers.CreateIssueRequest)
  parent: NoorCanvas.Controllers.IssueController
  langs:
  - csharp
  - vb
  name: CreateIssue(CreateIssueRequest)
  nameWithType: IssueController.CreateIssue(CreateIssueRequest)
  fullName: NoorCanvas.Controllers.IssueController.CreateIssue(NoorCanvas.Controllers.CreateIssueRequest)
  type: Method
  source:
    remote:
      path: SPA/NoorCanvas/Controllers/IssueController.cs
      branch: master
      repo: https://github.com/asifhussain60/NOOR-CANVAS.git
    id: CreateIssue
    path: ../SPA/NoorCanvas/Controllers/IssueController.cs
    startLine: 26
  namespace: NoorCanvas.Controllers
  summary: Create a new issue report
  example: []
  syntax:
    content: public Task<IActionResult> CreateIssue(CreateIssueRequest request)
    parameters:
    - id: request
      type: NoorCanvas.Controllers.CreateIssueRequest
      description: Issue creation request
    return:
      type: Task{IActionResult}
      description: Created issue with ID
    content.vb: Public Function CreateIssue(request As CreateIssueRequest) As Task(Of IActionResult)
  overload: NoorCanvas.Controllers.IssueController.CreateIssue*
- uid: NoorCanvas.Controllers.IssueController.GetIssue(System.Int64)
  commentId: M:NoorCanvas.Controllers.IssueController.GetIssue(System.Int64)
  id: GetIssue(System.Int64)
  parent: NoorCanvas.Controllers.IssueController
  langs:
  - csharp
  - vb
  name: GetIssue(long)
  nameWithType: IssueController.GetIssue(long)
  fullName: NoorCanvas.Controllers.IssueController.GetIssue(long)
  type: Method
  source:
    remote:
      path: SPA/NoorCanvas/Controllers/IssueController.cs
      branch: master
      repo: https://github.com/asifhussain60/NOOR-CANVAS.git
    id: GetIssue
    path: ../SPA/NoorCanvas/Controllers/IssueController.cs
    startLine: 93
  namespace: NoorCanvas.Controllers
  summary: Get issue by ID
  example: []
  syntax:
    content: public Task<IActionResult> GetIssue(long id)
    parameters:
    - id: id
      type: System.Int64
      description: Issue ID
    return:
      type: Task{IActionResult}
      description: Issue details
    content.vb: Public Function GetIssue(id As Long) As Task(Of IActionResult)
  overload: NoorCanvas.Controllers.IssueController.GetIssue*
  nameWithType.vb: IssueController.GetIssue(Long)
  fullName.vb: NoorCanvas.Controllers.IssueController.GetIssue(Long)
  name.vb: GetIssue(Long)
- uid: NoorCanvas.Controllers.IssueController.GetIssues(System.String,System.String,System.String)
  commentId: M:NoorCanvas.Controllers.IssueController.GetIssues(System.String,System.String,System.String)
  id: GetIssues(System.String,System.String,System.String)
  parent: NoorCanvas.Controllers.IssueController
  langs:
  - csharp
  - vb
  name: GetIssues(string?, string?, string?)
  nameWithType: IssueController.GetIssues(string?, string?, string?)
  fullName: NoorCanvas.Controllers.IssueController.GetIssues(string?, string?, string?)
  type: Method
  source:
    remote:
      path: SPA/NoorCanvas/Controllers/IssueController.cs
      branch: master
      repo: https://github.com/asifhussain60/NOOR-CANVAS.git
    id: GetIssues
    path: ../SPA/NoorCanvas/Controllers/IssueController.cs
    startLine: 136
  namespace: NoorCanvas.Controllers
  summary: Get all issues with optional filtering
  example: []
  syntax:
    content: public Task<IActionResult> GetIssues(string? status = null, string? priority = null, string? category = null)
    parameters:
    - id: status
      type: System.String
      description: Filter by status
    - id: priority
      type: System.String
      description: Filter by priority
    - id: category
      type: System.String
      description: Filter by category
    return:
      type: Task{IActionResult}
      description: List of issues
    content.vb: Public Function GetIssues(status As String = Nothing, priority As String = Nothing, category As String = Nothing) As Task(Of IActionResult)
  overload: NoorCanvas.Controllers.IssueController.GetIssues*
  nameWithType.vb: IssueController.GetIssues(String, String, String)
  fullName.vb: NoorCanvas.Controllers.IssueController.GetIssues(String, String, String)
  name.vb: GetIssues(String, String, String)
references:
- uid: NoorCanvas.Controllers
  commentId: N:NoorCanvas.Controllers
  href: NoorCanvas.html
  name: NoorCanvas.Controllers
  nameWithType: NoorCanvas.Controllers
  fullName: NoorCanvas.Controllers
  spec.csharp:
  - uid: NoorCanvas
    name: NoorCanvas
    href: NoorCanvas.html
  - name: .
  - uid: NoorCanvas.Controllers
    name: Controllers
    href: NoorCanvas.Controllers.html
  spec.vb:
  - uid: NoorCanvas
    name: NoorCanvas
    href: NoorCanvas.html
  - name: .
  - uid: NoorCanvas.Controllers
    name: Controllers
    href: NoorCanvas.Controllers.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NoorCanvas.Controllers.IssueController.#ctor*
  commentId: Overload:NoorCanvas.Controllers.IssueController.#ctor
  href: NoorCanvas.Controllers.IssueController.html#NoorCanvas_Controllers_IssueController__ctor_NoorCanvas_Data_CanvasDbContext_ILogger_NoorCanvas_Controllers_IssueController__
  name: IssueController
  nameWithType: IssueController.IssueController
  fullName: NoorCanvas.Controllers.IssueController.IssueController
  nameWithType.vb: IssueController.New
  fullName.vb: NoorCanvas.Controllers.IssueController.New
  name.vb: New
- uid: NoorCanvas.Data.CanvasDbContext
  commentId: T:NoorCanvas.Data.CanvasDbContext
  parent: NoorCanvas.Data
  href: NoorCanvas.Data.CanvasDbContext.html
  name: CanvasDbContext
  nameWithType: CanvasDbContext
  fullName: NoorCanvas.Data.CanvasDbContext
- uid: ILogger{NoorCanvas.Controllers.IssueController}
  commentId: '!:ILogger{NoorCanvas.Controllers.IssueController}'
  definition: ILogger`1
  href: NoorCanvas.Controllers.IssueController.html
  name: ILogger<IssueController>
  nameWithType: ILogger<IssueController>
  fullName: ILogger<NoorCanvas.Controllers.IssueController>
  nameWithType.vb: ILogger(Of IssueController)
  fullName.vb: ILogger(Of NoorCanvas.Controllers.IssueController)
  name.vb: ILogger(Of IssueController)
  spec.csharp:
  - uid: ILogger`1
    name: ILogger
    isExternal: true
  - name: <
  - uid: NoorCanvas.Controllers.IssueController
    name: IssueController
    href: NoorCanvas.Controllers.IssueController.html
  - name: '>'
  spec.vb:
  - uid: ILogger`1
    name: ILogger
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: NoorCanvas.Controllers.IssueController
    name: IssueController
    href: NoorCanvas.Controllers.IssueController.html
  - name: )
- uid: NoorCanvas.Data
  commentId: N:NoorCanvas.Data
  href: NoorCanvas.html
  name: NoorCanvas.Data
  nameWithType: NoorCanvas.Data
  fullName: NoorCanvas.Data
  spec.csharp:
  - uid: NoorCanvas
    name: NoorCanvas
    href: NoorCanvas.html
  - name: .
  - uid: NoorCanvas.Data
    name: Data
    href: NoorCanvas.Data.html
  spec.vb:
  - uid: NoorCanvas
    name: NoorCanvas
    href: NoorCanvas.html
  - name: .
  - uid: NoorCanvas.Data
    name: Data
    href: NoorCanvas.Data.html
- uid: ILogger`1
  isExternal: true
  name: ILogger<>
  nameWithType: ILogger<>
  fullName: ILogger<>
  nameWithType.vb: ILogger(Of )
  fullName.vb: ILogger(Of )
  name.vb: ILogger(Of )
  spec.csharp:
  - uid: ILogger`1
    name: ILogger
    isExternal: true
  - name: <
  - name: ''
  - name: '>'
  spec.vb:
  - uid: ILogger`1
    name: ILogger
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: )
- uid: NoorCanvas.Controllers.IssueController.CreateIssue*
  commentId: Overload:NoorCanvas.Controllers.IssueController.CreateIssue
  href: NoorCanvas.Controllers.IssueController.html#NoorCanvas_Controllers_IssueController_CreateIssue_NoorCanvas_Controllers_CreateIssueRequest_
  name: CreateIssue
  nameWithType: IssueController.CreateIssue
  fullName: NoorCanvas.Controllers.IssueController.CreateIssue
- uid: NoorCanvas.Controllers.CreateIssueRequest
  commentId: T:NoorCanvas.Controllers.CreateIssueRequest
  parent: NoorCanvas.Controllers
  href: NoorCanvas.Controllers.CreateIssueRequest.html
  name: CreateIssueRequest
  nameWithType: CreateIssueRequest
  fullName: NoorCanvas.Controllers.CreateIssueRequest
- uid: Task{IActionResult}
  commentId: '!:Task{IActionResult}'
  definition: Task`1
  name: Task<IActionResult>
  nameWithType: Task<IActionResult>
  fullName: Task<IActionResult>
  nameWithType.vb: Task(Of IActionResult)
  fullName.vb: Task(Of IActionResult)
  name.vb: Task(Of IActionResult)
  spec.csharp:
  - uid: Task`1
    name: Task
    isExternal: true
  - name: <
  - uid: IActionResult
    name: IActionResult
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: IActionResult
    name: IActionResult
    isExternal: true
  - name: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    isExternal: true
  - name: <
  - name: ''
  - name: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: )
- uid: NoorCanvas.Controllers.IssueController.GetIssue*
  commentId: Overload:NoorCanvas.Controllers.IssueController.GetIssue
  href: NoorCanvas.Controllers.IssueController.html#NoorCanvas_Controllers_IssueController_GetIssue_System_Int64_
  name: GetIssue
  nameWithType: IssueController.GetIssue
  fullName: NoorCanvas.Controllers.IssueController.GetIssue
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: NoorCanvas.Controllers.IssueController.GetIssues*
  commentId: Overload:NoorCanvas.Controllers.IssueController.GetIssues
  href: NoorCanvas.Controllers.IssueController.html#NoorCanvas_Controllers_IssueController_GetIssues_System_String_System_String_System_String_
  name: GetIssues
  nameWithType: IssueController.GetIssues
  fullName: NoorCanvas.Controllers.IssueController.GetIssues
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
