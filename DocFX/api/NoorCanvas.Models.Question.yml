### YamlMime:ManagedReference
items:
- uid: NoorCanvas.Models.Question
  commentId: T:NoorCanvas.Models.Question
  id: Question
  parent: NoorCanvas.Models
  children:
  - NoorCanvas.Models.Question.AnsweredAt
  - NoorCanvas.Models.Question.QuestionAnswers
  - NoorCanvas.Models.Question.QuestionId
  - NoorCanvas.Models.Question.QuestionText
  - NoorCanvas.Models.Question.QuestionVotes
  - NoorCanvas.Models.Question.QueuedAt
  - NoorCanvas.Models.Question.Session
  - NoorCanvas.Models.Question.SessionId
  - NoorCanvas.Models.Question.Status
  - NoorCanvas.Models.Question.User
  - NoorCanvas.Models.Question.UserId
  - NoorCanvas.Models.Question.VoteCount
  langs:
  - csharp
  - vb
  name: Question
  nameWithType: Question
  fullName: NoorCanvas.Models.Question
  type: Class
  source:
    remote:
      path: SPA/NoorCanvas/Models/Question.cs
      branch: master
      repo: https://github.com/asifhussain60/NOOR-CANVAS.git
    id: Question
    path: ../SPA/NoorCanvas/Models/Question.cs
    startLine: 5
  namespace: NoorCanvas.Models
  syntax:
    content: >-
      [Table("Questions", Schema = "canvas")]

      public class Question
    content.vb: >-
      <Table("Questions", Schema:="canvas")>

      Public Class Question
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.ComponentModel.DataAnnotations.Schema.TableAttribute
    ctor: System.ComponentModel.DataAnnotations.Schema.TableAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Questions
    namedArguments:
    - name: Schema
      type: System.String
      value: canvas
- uid: NoorCanvas.Models.Question.QuestionId
  commentId: P:NoorCanvas.Models.Question.QuestionId
  id: QuestionId
  parent: NoorCanvas.Models.Question
  langs:
  - csharp
  - vb
  name: QuestionId
  nameWithType: Question.QuestionId
  fullName: NoorCanvas.Models.Question.QuestionId
  type: Property
  source:
    remote:
      path: SPA/NoorCanvas/Models/Question.cs
      branch: master
      repo: https://github.com/asifhussain60/NOOR-CANVAS.git
    id: QuestionId
    path: ../SPA/NoorCanvas/Models/Question.cs
    startLine: 8
  namespace: NoorCanvas.Models
  syntax:
    content: >-
      [Key]

      public long QuestionId { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: >-
      <Key>

      Public Property QuestionId As Long
  overload: NoorCanvas.Models.Question.QuestionId*
  attributes:
  - type: System.ComponentModel.DataAnnotations.KeyAttribute
    ctor: System.ComponentModel.DataAnnotations.KeyAttribute.#ctor
    arguments: []
- uid: NoorCanvas.Models.Question.SessionId
  commentId: P:NoorCanvas.Models.Question.SessionId
  id: SessionId
  parent: NoorCanvas.Models.Question
  langs:
  - csharp
  - vb
  name: SessionId
  nameWithType: Question.SessionId
  fullName: NoorCanvas.Models.Question.SessionId
  type: Property
  source:
    remote:
      path: SPA/NoorCanvas/Models/Question.cs
      branch: master
      repo: https://github.com/asifhussain60/NOOR-CANVAS.git
    id: SessionId
    path: ../SPA/NoorCanvas/Models/Question.cs
    startLine: 11
  namespace: NoorCanvas.Models
  syntax:
    content: >-
      [Required]

      public long SessionId { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: >-
      <Required>

      Public Property SessionId As Long
  overload: NoorCanvas.Models.Question.SessionId*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: NoorCanvas.Models.Question.UserId
  commentId: P:NoorCanvas.Models.Question.UserId
  id: UserId
  parent: NoorCanvas.Models.Question
  langs:
  - csharp
  - vb
  name: UserId
  nameWithType: Question.UserId
  fullName: NoorCanvas.Models.Question.UserId
  type: Property
  source:
    remote:
      path: SPA/NoorCanvas/Models/Question.cs
      branch: master
      repo: https://github.com/asifhussain60/NOOR-CANVAS.git
    id: UserId
    path: ../SPA/NoorCanvas/Models/Question.cs
    startLine: 14
  namespace: NoorCanvas.Models
  syntax:
    content: >-
      [Required]

      public Guid UserId { get; set; }
    parameters: []
    return:
      type: Guid
    content.vb: >-
      <Required>

      Public Property UserId As Guid
  overload: NoorCanvas.Models.Question.UserId*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: NoorCanvas.Models.Question.QuestionText
  commentId: P:NoorCanvas.Models.Question.QuestionText
  id: QuestionText
  parent: NoorCanvas.Models.Question
  langs:
  - csharp
  - vb
  name: QuestionText
  nameWithType: Question.QuestionText
  fullName: NoorCanvas.Models.Question.QuestionText
  type: Property
  source:
    remote:
      path: SPA/NoorCanvas/Models/Question.cs
      branch: master
      repo: https://github.com/asifhussain60/NOOR-CANVAS.git
    id: QuestionText
    path: ../SPA/NoorCanvas/Models/Question.cs
    startLine: 17
  namespace: NoorCanvas.Models
  syntax:
    content: >-
      [Required]

      [MaxLength(280)]

      public string QuestionText { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required>

      <MaxLength(280)>

      Public Property QuestionText As String
  overload: NoorCanvas.Models.Question.QuestionText*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 280
- uid: NoorCanvas.Models.Question.QueuedAt
  commentId: P:NoorCanvas.Models.Question.QueuedAt
  id: QueuedAt
  parent: NoorCanvas.Models.Question
  langs:
  - csharp
  - vb
  name: QueuedAt
  nameWithType: Question.QueuedAt
  fullName: NoorCanvas.Models.Question.QueuedAt
  type: Property
  source:
    remote:
      path: SPA/NoorCanvas/Models/Question.cs
      branch: master
      repo: https://github.com/asifhussain60/NOOR-CANVAS.git
    id: QueuedAt
    path: ../SPA/NoorCanvas/Models/Question.cs
    startLine: 21
  namespace: NoorCanvas.Models
  syntax:
    content: public DateTime QueuedAt { get; set; }
    parameters: []
    return:
      type: DateTime
    content.vb: Public Property QueuedAt As DateTime
  overload: NoorCanvas.Models.Question.QueuedAt*
- uid: NoorCanvas.Models.Question.AnsweredAt
  commentId: P:NoorCanvas.Models.Question.AnsweredAt
  id: AnsweredAt
  parent: NoorCanvas.Models.Question
  langs:
  - csharp
  - vb
  name: AnsweredAt
  nameWithType: Question.AnsweredAt
  fullName: NoorCanvas.Models.Question.AnsweredAt
  type: Property
  source:
    remote:
      path: SPA/NoorCanvas/Models/Question.cs
      branch: master
      repo: https://github.com/asifhussain60/NOOR-CANVAS.git
    id: AnsweredAt
    path: ../SPA/NoorCanvas/Models/Question.cs
    startLine: 23
  namespace: NoorCanvas.Models
  syntax:
    content: public DateTime? AnsweredAt { get; set; }
    parameters: []
    return:
      type: System.Nullable{DateTime}
    content.vb: Public Property AnsweredAt As DateTime?
  overload: NoorCanvas.Models.Question.AnsweredAt*
- uid: NoorCanvas.Models.Question.VoteCount
  commentId: P:NoorCanvas.Models.Question.VoteCount
  id: VoteCount
  parent: NoorCanvas.Models.Question
  langs:
  - csharp
  - vb
  name: VoteCount
  nameWithType: Question.VoteCount
  fullName: NoorCanvas.Models.Question.VoteCount
  type: Property
  source:
    remote:
      path: SPA/NoorCanvas/Models/Question.cs
      branch: master
      repo: https://github.com/asifhussain60/NOOR-CANVAS.git
    id: VoteCount
    path: ../SPA/NoorCanvas/Models/Question.cs
    startLine: 25
  namespace: NoorCanvas.Models
  syntax:
    content: public int VoteCount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property VoteCount As Integer
  overload: NoorCanvas.Models.Question.VoteCount*
- uid: NoorCanvas.Models.Question.Status
  commentId: P:NoorCanvas.Models.Question.Status
  id: Status
  parent: NoorCanvas.Models.Question
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: Question.Status
  fullName: NoorCanvas.Models.Question.Status
  type: Property
  source:
    remote:
      path: SPA/NoorCanvas/Models/Question.cs
      branch: master
      repo: https://github.com/asifhussain60/NOOR-CANVAS.git
    id: Status
    path: ../SPA/NoorCanvas/Models/Question.cs
    startLine: 27
  namespace: NoorCanvas.Models
  syntax:
    content: >-
      [MaxLength(50)]

      public string Status { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <MaxLength(50)>

      Public Property Status As String
  overload: NoorCanvas.Models.Question.Status*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 50
- uid: NoorCanvas.Models.Question.Session
  commentId: P:NoorCanvas.Models.Question.Session
  id: Session
  parent: NoorCanvas.Models.Question
  langs:
  - csharp
  - vb
  name: Session
  nameWithType: Question.Session
  fullName: NoorCanvas.Models.Question.Session
  type: Property
  source:
    remote:
      path: SPA/NoorCanvas/Models/Question.cs
      branch: master
      repo: https://github.com/asifhussain60/NOOR-CANVAS.git
    id: Session
    path: ../SPA/NoorCanvas/Models/Question.cs
    startLine: 31
  namespace: NoorCanvas.Models
  syntax:
    content: >-
      [ForeignKey("SessionId")]

      public virtual Session Session { get; set; }
    parameters: []
    return:
      type: NoorCanvas.Models.Session
    content.vb: >-
      <ForeignKey("SessionId")>

      Public Overridable Property Session As Session
  overload: NoorCanvas.Models.Question.Session*
  attributes:
  - type: System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute
    ctor: System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: SessionId
- uid: NoorCanvas.Models.Question.User
  commentId: P:NoorCanvas.Models.Question.User
  id: User
  parent: NoorCanvas.Models.Question
  langs:
  - csharp
  - vb
  name: User
  nameWithType: Question.User
  fullName: NoorCanvas.Models.Question.User
  type: Property
  source:
    remote:
      path: SPA/NoorCanvas/Models/Question.cs
      branch: master
      repo: https://github.com/asifhussain60/NOOR-CANVAS.git
    id: User
    path: ../SPA/NoorCanvas/Models/Question.cs
    startLine: 34
  namespace: NoorCanvas.Models
  syntax:
    content: >-
      [ForeignKey("UserId")]

      public virtual User User { get; set; }
    parameters: []
    return:
      type: NoorCanvas.Models.User
    content.vb: >-
      <ForeignKey("UserId")>

      Public Overridable Property User As User
  overload: NoorCanvas.Models.Question.User*
  attributes:
  - type: System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute
    ctor: System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: UserId
- uid: NoorCanvas.Models.Question.QuestionAnswers
  commentId: P:NoorCanvas.Models.Question.QuestionAnswers
  id: QuestionAnswers
  parent: NoorCanvas.Models.Question
  langs:
  - csharp
  - vb
  name: QuestionAnswers
  nameWithType: Question.QuestionAnswers
  fullName: NoorCanvas.Models.Question.QuestionAnswers
  type: Property
  source:
    remote:
      path: SPA/NoorCanvas/Models/Question.cs
      branch: master
      repo: https://github.com/asifhussain60/NOOR-CANVAS.git
    id: QuestionAnswers
    path: ../SPA/NoorCanvas/Models/Question.cs
    startLine: 37
  namespace: NoorCanvas.Models
  syntax:
    content: public virtual ICollection<QuestionAnswer> QuestionAnswers { get; set; }
    parameters: []
    return:
      type: ICollection{NoorCanvas.Models.QuestionAnswer}
    content.vb: Public Overridable Property QuestionAnswers As ICollection(Of QuestionAnswer)
  overload: NoorCanvas.Models.Question.QuestionAnswers*
- uid: NoorCanvas.Models.Question.QuestionVotes
  commentId: P:NoorCanvas.Models.Question.QuestionVotes
  id: QuestionVotes
  parent: NoorCanvas.Models.Question
  langs:
  - csharp
  - vb
  name: QuestionVotes
  nameWithType: Question.QuestionVotes
  fullName: NoorCanvas.Models.Question.QuestionVotes
  type: Property
  source:
    remote:
      path: SPA/NoorCanvas/Models/Question.cs
      branch: master
      repo: https://github.com/asifhussain60/NOOR-CANVAS.git
    id: QuestionVotes
    path: ../SPA/NoorCanvas/Models/Question.cs
    startLine: 38
  namespace: NoorCanvas.Models
  syntax:
    content: public virtual ICollection<QuestionVote> QuestionVotes { get; set; }
    parameters: []
    return:
      type: ICollection{NoorCanvas.Models.QuestionVote}
    content.vb: Public Overridable Property QuestionVotes As ICollection(Of QuestionVote)
  overload: NoorCanvas.Models.Question.QuestionVotes*
references:
- uid: NoorCanvas.Models
  commentId: N:NoorCanvas.Models
  href: NoorCanvas.html
  name: NoorCanvas.Models
  nameWithType: NoorCanvas.Models
  fullName: NoorCanvas.Models
  spec.csharp:
  - uid: NoorCanvas
    name: NoorCanvas
    href: NoorCanvas.html
  - name: .
  - uid: NoorCanvas.Models
    name: Models
    href: NoorCanvas.Models.html
  spec.vb:
  - uid: NoorCanvas
    name: NoorCanvas
    href: NoorCanvas.html
  - name: .
  - uid: NoorCanvas.Models
    name: Models
    href: NoorCanvas.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NoorCanvas.Models.Question.QuestionId*
  commentId: Overload:NoorCanvas.Models.Question.QuestionId
  href: NoorCanvas.Models.Question.html#NoorCanvas_Models_Question_QuestionId
  name: QuestionId
  nameWithType: Question.QuestionId
  fullName: NoorCanvas.Models.Question.QuestionId
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: NoorCanvas.Models.Question.SessionId*
  commentId: Overload:NoorCanvas.Models.Question.SessionId
  href: NoorCanvas.Models.Question.html#NoorCanvas_Models_Question_SessionId
  name: SessionId
  nameWithType: Question.SessionId
  fullName: NoorCanvas.Models.Question.SessionId
- uid: NoorCanvas.Models.Question.UserId*
  commentId: Overload:NoorCanvas.Models.Question.UserId
  href: NoorCanvas.Models.Question.html#NoorCanvas_Models_Question_UserId
  name: UserId
  nameWithType: Question.UserId
  fullName: NoorCanvas.Models.Question.UserId
- uid: Guid
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: Guid
- uid: NoorCanvas.Models.Question.QuestionText*
  commentId: Overload:NoorCanvas.Models.Question.QuestionText
  href: NoorCanvas.Models.Question.html#NoorCanvas_Models_Question_QuestionText
  name: QuestionText
  nameWithType: Question.QuestionText
  fullName: NoorCanvas.Models.Question.QuestionText
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: NoorCanvas.Models.Question.QueuedAt*
  commentId: Overload:NoorCanvas.Models.Question.QueuedAt
  href: NoorCanvas.Models.Question.html#NoorCanvas_Models_Question_QueuedAt
  name: QueuedAt
  nameWithType: Question.QueuedAt
  fullName: NoorCanvas.Models.Question.QueuedAt
- uid: DateTime
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: DateTime
- uid: NoorCanvas.Models.Question.AnsweredAt*
  commentId: Overload:NoorCanvas.Models.Question.AnsweredAt
  href: NoorCanvas.Models.Question.html#NoorCanvas_Models_Question_AnsweredAt
  name: AnsweredAt
  nameWithType: Question.AnsweredAt
  fullName: NoorCanvas.Models.Question.AnsweredAt
- uid: System.Nullable{DateTime}
  commentId: T:System.Nullable{DateTime}
  parent: System
  definition: System.Nullable`1
  name: DateTime?
  nameWithType: DateTime?
  fullName: DateTime?
  spec.csharp:
  - uid: DateTime
    name: DateTime
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: DateTime
    name: DateTime
    isExternal: true
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NoorCanvas.Models.Question.VoteCount*
  commentId: Overload:NoorCanvas.Models.Question.VoteCount
  href: NoorCanvas.Models.Question.html#NoorCanvas_Models_Question_VoteCount
  name: VoteCount
  nameWithType: Question.VoteCount
  fullName: NoorCanvas.Models.Question.VoteCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: NoorCanvas.Models.Question.Status*
  commentId: Overload:NoorCanvas.Models.Question.Status
  href: NoorCanvas.Models.Question.html#NoorCanvas_Models_Question_Status
  name: Status
  nameWithType: Question.Status
  fullName: NoorCanvas.Models.Question.Status
- uid: NoorCanvas.Models.Question.Session*
  commentId: Overload:NoorCanvas.Models.Question.Session
  href: NoorCanvas.Models.Question.html#NoorCanvas_Models_Question_Session
  name: Session
  nameWithType: Question.Session
  fullName: NoorCanvas.Models.Question.Session
- uid: NoorCanvas.Models.Session
  commentId: T:NoorCanvas.Models.Session
  parent: NoorCanvas.Models
  href: NoorCanvas.Models.Session.html
  name: Session
  nameWithType: Session
  fullName: NoorCanvas.Models.Session
- uid: NoorCanvas.Models.Question.User*
  commentId: Overload:NoorCanvas.Models.Question.User
  href: NoorCanvas.Models.Question.html#NoorCanvas_Models_Question_User
  name: User
  nameWithType: Question.User
  fullName: NoorCanvas.Models.Question.User
- uid: NoorCanvas.Models.User
  commentId: T:NoorCanvas.Models.User
  parent: NoorCanvas.Models
  href: NoorCanvas.Models.User.html
  name: User
  nameWithType: User
  fullName: NoorCanvas.Models.User
- uid: NoorCanvas.Models.Question.QuestionAnswers*
  commentId: Overload:NoorCanvas.Models.Question.QuestionAnswers
  href: NoorCanvas.Models.Question.html#NoorCanvas_Models_Question_QuestionAnswers
  name: QuestionAnswers
  nameWithType: Question.QuestionAnswers
  fullName: NoorCanvas.Models.Question.QuestionAnswers
- uid: ICollection{NoorCanvas.Models.QuestionAnswer}
  commentId: '!:ICollection{NoorCanvas.Models.QuestionAnswer}'
  definition: ICollection`1
  href: NoorCanvas.Models.QuestionAnswer.html
  name: ICollection<QuestionAnswer>
  nameWithType: ICollection<QuestionAnswer>
  fullName: ICollection<NoorCanvas.Models.QuestionAnswer>
  nameWithType.vb: ICollection(Of QuestionAnswer)
  fullName.vb: ICollection(Of NoorCanvas.Models.QuestionAnswer)
  name.vb: ICollection(Of QuestionAnswer)
  spec.csharp:
  - uid: ICollection`1
    name: ICollection
    isExternal: true
  - name: <
  - uid: NoorCanvas.Models.QuestionAnswer
    name: QuestionAnswer
    href: NoorCanvas.Models.QuestionAnswer.html
  - name: '>'
  spec.vb:
  - uid: ICollection`1
    name: ICollection
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: NoorCanvas.Models.QuestionAnswer
    name: QuestionAnswer
    href: NoorCanvas.Models.QuestionAnswer.html
  - name: )
- uid: ICollection`1
  isExternal: true
  name: ICollection<>
  nameWithType: ICollection<>
  fullName: ICollection<>
  nameWithType.vb: ICollection(Of )
  fullName.vb: ICollection(Of )
  name.vb: ICollection(Of )
  spec.csharp:
  - uid: ICollection`1
    name: ICollection
    isExternal: true
  - name: <
  - name: ''
  - name: '>'
  spec.vb:
  - uid: ICollection`1
    name: ICollection
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: )
- uid: NoorCanvas.Models.Question.QuestionVotes*
  commentId: Overload:NoorCanvas.Models.Question.QuestionVotes
  href: NoorCanvas.Models.Question.html#NoorCanvas_Models_Question_QuestionVotes
  name: QuestionVotes
  nameWithType: Question.QuestionVotes
  fullName: NoorCanvas.Models.Question.QuestionVotes
- uid: ICollection{NoorCanvas.Models.QuestionVote}
  commentId: '!:ICollection{NoorCanvas.Models.QuestionVote}'
  definition: ICollection`1
  href: NoorCanvas.Models.QuestionVote.html
  name: ICollection<QuestionVote>
  nameWithType: ICollection<QuestionVote>
  fullName: ICollection<NoorCanvas.Models.QuestionVote>
  nameWithType.vb: ICollection(Of QuestionVote)
  fullName.vb: ICollection(Of NoorCanvas.Models.QuestionVote)
  name.vb: ICollection(Of QuestionVote)
  spec.csharp:
  - uid: ICollection`1
    name: ICollection
    isExternal: true
  - name: <
  - uid: NoorCanvas.Models.QuestionVote
    name: QuestionVote
    href: NoorCanvas.Models.QuestionVote.html
  - name: '>'
  spec.vb:
  - uid: ICollection`1
    name: ICollection
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: NoorCanvas.Models.QuestionVote
    name: QuestionVote
    href: NoorCanvas.Models.QuestionVote.html
  - name: )
