### YamlMime:ManagedReference
items:
- uid: NoorCanvas.Controllers.AdminController
  commentId: T:NoorCanvas.Controllers.AdminController
  id: AdminController
  parent: NoorCanvas.Controllers
  children:
  - NoorCanvas.Controllers.AdminController.#ctor(NoorCanvas.Data.CanvasDbContext,ILogger{NoorCanvas.Controllers.AdminController})
  - NoorCanvas.Controllers.AdminController.AuthenticateAdmin(NoorCanvas.Controllers.AdminAuthRequest)
  - NoorCanvas.Controllers.AdminController.DeactivateUser(System.String,System.String)
  - NoorCanvas.Controllers.AdminController.GetAdminDashboard(System.String)
  - NoorCanvas.Controllers.AdminController.GetAllSessions(System.String,System.Int32,System.Int32)
  - NoorCanvas.Controllers.AdminController.GetAllUsers(System.String,System.Int32,System.Int32)
  - NoorCanvas.Controllers.AdminController.TerminateSession(System.Int64,System.String)
  langs:
  - csharp
  - vb
  name: AdminController
  nameWithType: AdminController
  fullName: NoorCanvas.Controllers.AdminController
  type: Class
  source:
    remote:
      path: SPA/NoorCanvas/Controllers/AdminController.cs
      branch: master
      repo: https://github.com/asifhussain60/NOOR-CANVAS.git
    id: AdminController
    path: ../SPA/NoorCanvas/Controllers/AdminController.cs
    startLine: 9
  namespace: NoorCanvas.Controllers
  syntax:
    content: 'public class AdminController : ControllerBase'
    content.vb: Public Class AdminController Inherits ControllerBase
  inheritance:
  - System.Object
- uid: NoorCanvas.Controllers.AdminController.#ctor(NoorCanvas.Data.CanvasDbContext,ILogger{NoorCanvas.Controllers.AdminController})
  commentId: M:NoorCanvas.Controllers.AdminController.#ctor(NoorCanvas.Data.CanvasDbContext,ILogger{NoorCanvas.Controllers.AdminController})
  id: '#ctor(NoorCanvas.Data.CanvasDbContext,ILogger{NoorCanvas.Controllers.AdminController})'
  parent: NoorCanvas.Controllers.AdminController
  langs:
  - csharp
  - vb
  name: AdminController(CanvasDbContext, ILogger<AdminController>)
  nameWithType: AdminController.AdminController(CanvasDbContext, ILogger<AdminController>)
  fullName: NoorCanvas.Controllers.AdminController.AdminController(NoorCanvas.Data.CanvasDbContext, ILogger<NoorCanvas.Controllers.AdminController>)
  type: Constructor
  source:
    remote:
      path: SPA/NoorCanvas/Controllers/AdminController.cs
      branch: master
      repo: https://github.com/asifhussain60/NOOR-CANVAS.git
    id: .ctor
    path: ../SPA/NoorCanvas/Controllers/AdminController.cs
    startLine: 16
  namespace: NoorCanvas.Controllers
  syntax:
    content: public AdminController(CanvasDbContext context, ILogger<AdminController> logger)
    parameters:
    - id: context
      type: NoorCanvas.Data.CanvasDbContext
    - id: logger
      type: ILogger{NoorCanvas.Controllers.AdminController}
    content.vb: Public Sub New(context As CanvasDbContext, logger As ILogger(Of AdminController))
  overload: NoorCanvas.Controllers.AdminController.#ctor*
  nameWithType.vb: AdminController.New(CanvasDbContext, ILogger(Of AdminController))
  fullName.vb: NoorCanvas.Controllers.AdminController.New(NoorCanvas.Data.CanvasDbContext, ILogger(Of NoorCanvas.Controllers.AdminController))
  name.vb: New(CanvasDbContext, ILogger(Of AdminController))
- uid: NoorCanvas.Controllers.AdminController.AuthenticateAdmin(NoorCanvas.Controllers.AdminAuthRequest)
  commentId: M:NoorCanvas.Controllers.AdminController.AuthenticateAdmin(NoorCanvas.Controllers.AdminAuthRequest)
  id: AuthenticateAdmin(NoorCanvas.Controllers.AdminAuthRequest)
  parent: NoorCanvas.Controllers.AdminController
  langs:
  - csharp
  - vb
  name: AuthenticateAdmin(AdminAuthRequest)
  nameWithType: AdminController.AuthenticateAdmin(AdminAuthRequest)
  fullName: NoorCanvas.Controllers.AdminController.AuthenticateAdmin(NoorCanvas.Controllers.AdminAuthRequest)
  type: Method
  source:
    remote:
      path: SPA/NoorCanvas/Controllers/AdminController.cs
      branch: master
      repo: https://github.com/asifhussain60/NOOR-CANVAS.git
    id: AuthenticateAdmin
    path: ../SPA/NoorCanvas/Controllers/AdminController.cs
    startLine: 22
  namespace: NoorCanvas.Controllers
  syntax:
    content: public Task<IActionResult> AuthenticateAdmin(AdminAuthRequest request)
    parameters:
    - id: request
      type: NoorCanvas.Controllers.AdminAuthRequest
    return:
      type: Task{IActionResult}
    content.vb: Public Function AuthenticateAdmin(request As AdminAuthRequest) As Task(Of IActionResult)
  overload: NoorCanvas.Controllers.AdminController.AuthenticateAdmin*
- uid: NoorCanvas.Controllers.AdminController.GetAdminDashboard(System.String)
  commentId: M:NoorCanvas.Controllers.AdminController.GetAdminDashboard(System.String)
  id: GetAdminDashboard(System.String)
  parent: NoorCanvas.Controllers.AdminController
  langs:
  - csharp
  - vb
  name: GetAdminDashboard(string)
  nameWithType: AdminController.GetAdminDashboard(string)
  fullName: NoorCanvas.Controllers.AdminController.GetAdminDashboard(string)
  type: Method
  source:
    remote:
      path: SPA/NoorCanvas/Controllers/AdminController.cs
      branch: master
      repo: https://github.com/asifhussain60/NOOR-CANVAS.git
    id: GetAdminDashboard
    path: ../SPA/NoorCanvas/Controllers/AdminController.cs
    startLine: 68
  namespace: NoorCanvas.Controllers
  syntax:
    content: public Task<IActionResult> GetAdminDashboard(string sessionToken)
    parameters:
    - id: sessionToken
      type: System.String
    return:
      type: Task{IActionResult}
    content.vb: Public Function GetAdminDashboard(sessionToken As String) As Task(Of IActionResult)
  overload: NoorCanvas.Controllers.AdminController.GetAdminDashboard*
  nameWithType.vb: AdminController.GetAdminDashboard(String)
  fullName.vb: NoorCanvas.Controllers.AdminController.GetAdminDashboard(String)
  name.vb: GetAdminDashboard(String)
- uid: NoorCanvas.Controllers.AdminController.GetAllSessions(System.String,System.Int32,System.Int32)
  commentId: M:NoorCanvas.Controllers.AdminController.GetAllSessions(System.String,System.Int32,System.Int32)
  id: GetAllSessions(System.String,System.Int32,System.Int32)
  parent: NoorCanvas.Controllers.AdminController
  langs:
  - csharp
  - vb
  name: GetAllSessions(string, int, int)
  nameWithType: AdminController.GetAllSessions(string, int, int)
  fullName: NoorCanvas.Controllers.AdminController.GetAllSessions(string, int, int)
  type: Method
  source:
    remote:
      path: SPA/NoorCanvas/Controllers/AdminController.cs
      branch: master
      repo: https://github.com/asifhussain60/NOOR-CANVAS.git
    id: GetAllSessions
    path: ../SPA/NoorCanvas/Controllers/AdminController.cs
    startLine: 149
  namespace: NoorCanvas.Controllers
  syntax:
    content: public Task<IActionResult> GetAllSessions(string sessionToken, int page = 1, int pageSize = 20)
    parameters:
    - id: sessionToken
      type: System.String
    - id: page
      type: System.Int32
    - id: pageSize
      type: System.Int32
    return:
      type: Task{IActionResult}
    content.vb: Public Function GetAllSessions(sessionToken As String, page As Integer = 1, pageSize As Integer = 20) As Task(Of IActionResult)
  overload: NoorCanvas.Controllers.AdminController.GetAllSessions*
  nameWithType.vb: AdminController.GetAllSessions(String, Integer, Integer)
  fullName.vb: NoorCanvas.Controllers.AdminController.GetAllSessions(String, Integer, Integer)
  name.vb: GetAllSessions(String, Integer, Integer)
- uid: NoorCanvas.Controllers.AdminController.TerminateSession(System.Int64,System.String)
  commentId: M:NoorCanvas.Controllers.AdminController.TerminateSession(System.Int64,System.String)
  id: TerminateSession(System.Int64,System.String)
  parent: NoorCanvas.Controllers.AdminController
  langs:
  - csharp
  - vb
  name: TerminateSession(long, string)
  nameWithType: AdminController.TerminateSession(long, string)
  fullName: NoorCanvas.Controllers.AdminController.TerminateSession(long, string)
  type: Method
  source:
    remote:
      path: SPA/NoorCanvas/Controllers/AdminController.cs
      branch: master
      repo: https://github.com/asifhussain60/NOOR-CANVAS.git
    id: TerminateSession
    path: ../SPA/NoorCanvas/Controllers/AdminController.cs
    startLine: 201
  namespace: NoorCanvas.Controllers
  syntax:
    content: public Task<IActionResult> TerminateSession(long sessionId, string sessionToken)
    parameters:
    - id: sessionId
      type: System.Int64
    - id: sessionToken
      type: System.String
    return:
      type: Task{IActionResult}
    content.vb: Public Function TerminateSession(sessionId As Long, sessionToken As String) As Task(Of IActionResult)
  overload: NoorCanvas.Controllers.AdminController.TerminateSession*
  nameWithType.vb: AdminController.TerminateSession(Long, String)
  fullName.vb: NoorCanvas.Controllers.AdminController.TerminateSession(Long, String)
  name.vb: TerminateSession(Long, String)
- uid: NoorCanvas.Controllers.AdminController.GetAllUsers(System.String,System.Int32,System.Int32)
  commentId: M:NoorCanvas.Controllers.AdminController.GetAllUsers(System.String,System.Int32,System.Int32)
  id: GetAllUsers(System.String,System.Int32,System.Int32)
  parent: NoorCanvas.Controllers.AdminController
  langs:
  - csharp
  - vb
  name: GetAllUsers(string, int, int)
  nameWithType: AdminController.GetAllUsers(string, int, int)
  fullName: NoorCanvas.Controllers.AdminController.GetAllUsers(string, int, int)
  type: Method
  source:
    remote:
      path: SPA/NoorCanvas/Controllers/AdminController.cs
      branch: master
      repo: https://github.com/asifhussain60/NOOR-CANVAS.git
    id: GetAllUsers
    path: ../SPA/NoorCanvas/Controllers/AdminController.cs
    startLine: 235
  namespace: NoorCanvas.Controllers
  syntax:
    content: public Task<IActionResult> GetAllUsers(string sessionToken, int page = 1, int pageSize = 20)
    parameters:
    - id: sessionToken
      type: System.String
    - id: page
      type: System.Int32
    - id: pageSize
      type: System.Int32
    return:
      type: Task{IActionResult}
    content.vb: Public Function GetAllUsers(sessionToken As String, page As Integer = 1, pageSize As Integer = 20) As Task(Of IActionResult)
  overload: NoorCanvas.Controllers.AdminController.GetAllUsers*
  nameWithType.vb: AdminController.GetAllUsers(String, Integer, Integer)
  fullName.vb: NoorCanvas.Controllers.AdminController.GetAllUsers(String, Integer, Integer)
  name.vb: GetAllUsers(String, Integer, Integer)
- uid: NoorCanvas.Controllers.AdminController.DeactivateUser(System.String,System.String)
  commentId: M:NoorCanvas.Controllers.AdminController.DeactivateUser(System.String,System.String)
  id: DeactivateUser(System.String,System.String)
  parent: NoorCanvas.Controllers.AdminController
  langs:
  - csharp
  - vb
  name: DeactivateUser(string, string)
  nameWithType: AdminController.DeactivateUser(string, string)
  fullName: NoorCanvas.Controllers.AdminController.DeactivateUser(string, string)
  type: Method
  source:
    remote:
      path: SPA/NoorCanvas/Controllers/AdminController.cs
      branch: master
      repo: https://github.com/asifhussain60/NOOR-CANVAS.git
    id: DeactivateUser
    path: ../SPA/NoorCanvas/Controllers/AdminController.cs
    startLine: 283
  namespace: NoorCanvas.Controllers
  syntax:
    content: public Task<IActionResult> DeactivateUser(string userId, string sessionToken)
    parameters:
    - id: userId
      type: System.String
    - id: sessionToken
      type: System.String
    return:
      type: Task{IActionResult}
    content.vb: Public Function DeactivateUser(userId As String, sessionToken As String) As Task(Of IActionResult)
  overload: NoorCanvas.Controllers.AdminController.DeactivateUser*
  nameWithType.vb: AdminController.DeactivateUser(String, String)
  fullName.vb: NoorCanvas.Controllers.AdminController.DeactivateUser(String, String)
  name.vb: DeactivateUser(String, String)
references:
- uid: NoorCanvas.Controllers
  commentId: N:NoorCanvas.Controllers
  href: NoorCanvas.html
  name: NoorCanvas.Controllers
  nameWithType: NoorCanvas.Controllers
  fullName: NoorCanvas.Controllers
  spec.csharp:
  - uid: NoorCanvas
    name: NoorCanvas
    href: NoorCanvas.html
  - name: .
  - uid: NoorCanvas.Controllers
    name: Controllers
    href: NoorCanvas.Controllers.html
  spec.vb:
  - uid: NoorCanvas
    name: NoorCanvas
    href: NoorCanvas.html
  - name: .
  - uid: NoorCanvas.Controllers
    name: Controllers
    href: NoorCanvas.Controllers.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NoorCanvas.Controllers.AdminController.#ctor*
  commentId: Overload:NoorCanvas.Controllers.AdminController.#ctor
  href: NoorCanvas.Controllers.AdminController.html#NoorCanvas_Controllers_AdminController__ctor_NoorCanvas_Data_CanvasDbContext_ILogger_NoorCanvas_Controllers_AdminController__
  name: AdminController
  nameWithType: AdminController.AdminController
  fullName: NoorCanvas.Controllers.AdminController.AdminController
  nameWithType.vb: AdminController.New
  fullName.vb: NoorCanvas.Controllers.AdminController.New
  name.vb: New
- uid: NoorCanvas.Data.CanvasDbContext
  commentId: T:NoorCanvas.Data.CanvasDbContext
  parent: NoorCanvas.Data
  href: NoorCanvas.Data.CanvasDbContext.html
  name: CanvasDbContext
  nameWithType: CanvasDbContext
  fullName: NoorCanvas.Data.CanvasDbContext
- uid: ILogger{NoorCanvas.Controllers.AdminController}
  commentId: '!:ILogger{NoorCanvas.Controllers.AdminController}'
  definition: ILogger`1
  href: NoorCanvas.Controllers.AdminController.html
  name: ILogger<AdminController>
  nameWithType: ILogger<AdminController>
  fullName: ILogger<NoorCanvas.Controllers.AdminController>
  nameWithType.vb: ILogger(Of AdminController)
  fullName.vb: ILogger(Of NoorCanvas.Controllers.AdminController)
  name.vb: ILogger(Of AdminController)
  spec.csharp:
  - uid: ILogger`1
    name: ILogger
    isExternal: true
  - name: <
  - uid: NoorCanvas.Controllers.AdminController
    name: AdminController
    href: NoorCanvas.Controllers.AdminController.html
  - name: '>'
  spec.vb:
  - uid: ILogger`1
    name: ILogger
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: NoorCanvas.Controllers.AdminController
    name: AdminController
    href: NoorCanvas.Controllers.AdminController.html
  - name: )
- uid: NoorCanvas.Data
  commentId: N:NoorCanvas.Data
  href: NoorCanvas.html
  name: NoorCanvas.Data
  nameWithType: NoorCanvas.Data
  fullName: NoorCanvas.Data
  spec.csharp:
  - uid: NoorCanvas
    name: NoorCanvas
    href: NoorCanvas.html
  - name: .
  - uid: NoorCanvas.Data
    name: Data
    href: NoorCanvas.Data.html
  spec.vb:
  - uid: NoorCanvas
    name: NoorCanvas
    href: NoorCanvas.html
  - name: .
  - uid: NoorCanvas.Data
    name: Data
    href: NoorCanvas.Data.html
- uid: ILogger`1
  isExternal: true
  name: ILogger<>
  nameWithType: ILogger<>
  fullName: ILogger<>
  nameWithType.vb: ILogger(Of )
  fullName.vb: ILogger(Of )
  name.vb: ILogger(Of )
  spec.csharp:
  - uid: ILogger`1
    name: ILogger
    isExternal: true
  - name: <
  - name: ''
  - name: '>'
  spec.vb:
  - uid: ILogger`1
    name: ILogger
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: )
- uid: NoorCanvas.Controllers.AdminController.AuthenticateAdmin*
  commentId: Overload:NoorCanvas.Controllers.AdminController.AuthenticateAdmin
  href: NoorCanvas.Controllers.AdminController.html#NoorCanvas_Controllers_AdminController_AuthenticateAdmin_NoorCanvas_Controllers_AdminAuthRequest_
  name: AuthenticateAdmin
  nameWithType: AdminController.AuthenticateAdmin
  fullName: NoorCanvas.Controllers.AdminController.AuthenticateAdmin
- uid: NoorCanvas.Controllers.AdminAuthRequest
  commentId: T:NoorCanvas.Controllers.AdminAuthRequest
  parent: NoorCanvas.Controllers
  href: NoorCanvas.Controllers.AdminAuthRequest.html
  name: AdminAuthRequest
  nameWithType: AdminAuthRequest
  fullName: NoorCanvas.Controllers.AdminAuthRequest
- uid: Task{IActionResult}
  commentId: '!:Task{IActionResult}'
  definition: Task`1
  name: Task<IActionResult>
  nameWithType: Task<IActionResult>
  fullName: Task<IActionResult>
  nameWithType.vb: Task(Of IActionResult)
  fullName.vb: Task(Of IActionResult)
  name.vb: Task(Of IActionResult)
  spec.csharp:
  - uid: Task`1
    name: Task
    isExternal: true
  - name: <
  - uid: IActionResult
    name: IActionResult
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: IActionResult
    name: IActionResult
    isExternal: true
  - name: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    isExternal: true
  - name: <
  - name: ''
  - name: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: )
- uid: NoorCanvas.Controllers.AdminController.GetAdminDashboard*
  commentId: Overload:NoorCanvas.Controllers.AdminController.GetAdminDashboard
  href: NoorCanvas.Controllers.AdminController.html#NoorCanvas_Controllers_AdminController_GetAdminDashboard_System_String_
  name: GetAdminDashboard
  nameWithType: AdminController.GetAdminDashboard
  fullName: NoorCanvas.Controllers.AdminController.GetAdminDashboard
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: NoorCanvas.Controllers.AdminController.GetAllSessions*
  commentId: Overload:NoorCanvas.Controllers.AdminController.GetAllSessions
  href: NoorCanvas.Controllers.AdminController.html#NoorCanvas_Controllers_AdminController_GetAllSessions_System_String_System_Int32_System_Int32_
  name: GetAllSessions
  nameWithType: AdminController.GetAllSessions
  fullName: NoorCanvas.Controllers.AdminController.GetAllSessions
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: NoorCanvas.Controllers.AdminController.TerminateSession*
  commentId: Overload:NoorCanvas.Controllers.AdminController.TerminateSession
  href: NoorCanvas.Controllers.AdminController.html#NoorCanvas_Controllers_AdminController_TerminateSession_System_Int64_System_String_
  name: TerminateSession
  nameWithType: AdminController.TerminateSession
  fullName: NoorCanvas.Controllers.AdminController.TerminateSession
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: NoorCanvas.Controllers.AdminController.GetAllUsers*
  commentId: Overload:NoorCanvas.Controllers.AdminController.GetAllUsers
  href: NoorCanvas.Controllers.AdminController.html#NoorCanvas_Controllers_AdminController_GetAllUsers_System_String_System_Int32_System_Int32_
  name: GetAllUsers
  nameWithType: AdminController.GetAllUsers
  fullName: NoorCanvas.Controllers.AdminController.GetAllUsers
- uid: NoorCanvas.Controllers.AdminController.DeactivateUser*
  commentId: Overload:NoorCanvas.Controllers.AdminController.DeactivateUser
  href: NoorCanvas.Controllers.AdminController.html#NoorCanvas_Controllers_AdminController_DeactivateUser_System_String_System_String_
  name: DeactivateUser
  nameWithType: AdminController.DeactivateUser
  fullName: NoorCanvas.Controllers.AdminController.DeactivateUser
