Copilot Manager – Quick Usage Guide
===================================

This `copilot_manager` folder contains everything you need to manage your GitHub Copilot prompts and instructions lifecycle.  Follow these steps to get up and running:

1. **Place your `prompt.keys.zip` file**
   - Obtain your latest `prompt.keys.zip` (exported from the Copilot prompts archive).
   - Copy or move the ZIP into the root of your project.  The `setup.bat` script will ask for its location.

2. **Run the one‑click installer**
   - Open a command prompt or PowerShell window.
   - Navigate into your project root.
   - Run `copilot_manager\setup.bat`.
   - When prompted, enter the full path to your `prompt.keys.zip`.  Press **Enter** to accept defaults when offered.
   - The script creates a Python virtual environment, installs any required packages, migrates your keys into a SQLite database, exports fresh JSON files for the dashboard, and optionally opens the dashboard in your default browser.

3. **View the dashboard**
   - After setup, the dashboard can be opened by launching `copilot_manager\views\index.html` in any modern browser.
   - The dashboard is a static, self‑hosted site.  All charts and tables load directly from the exported JSON files under `copilot_manager\data`.

4. **Refresh with new keys**
   - When you have a new version of `prompt.keys.zip`, drop it into your project root.
   - Run `copilot_manager\refresh.bat` to re‑run the migration against the new ZIP and refresh the JSON exports.  Your existing database will be updated in place.

5. **Command‑line interface (CLI)**
   - The included `cli.py` provides a starting point for creating new keys and managing their lifecycle.
   - You can run `python cli.py --help` in the `copilot_manager` folder for usage information.
   - **Note:** the CLI is a basic scaffold.  You are encouraged to extend it using GitHub Copilot to fit your workflow.

6. **Files and Folders**
   - `db.py` – Defines the SQLite schema (tables for Keys, AcceptanceCriteria, and UndoLogs).
   - `migrate.py` – Populates the database from a `prompt.keys.zip` and exports JSON data for the dashboard.  It accepts `--keys` and `--db` command‑line arguments.
   - `views/` – Contains the self‑hosted HTML, CSS and JavaScript for the dashboard.  The dashboard automatically loads the latest JSON exports when the page is opened.
   - `setup.bat` – One‑click installer that asks for your ZIP and database paths, sets up a virtual environment, runs the migration, and optionally opens the dashboard.
   - `refresh.bat` – Runs the migration again without reinstalling anything.  Use this whenever you update your `prompt.keys.zip`.

7. **Extending the application**
   - Use GitHub Copilot to evolve the CLI commands or dashboard views.  The `migrate.py` script is designed to be easily adaptable to changes in your `.keys` file format.
   - The JavaScript code under `views/js/` is modularised by view.  You can add new views or improve existing ones as your needs evolve.

Enjoy managing your Copilot prompts with a clean, visual and auditable workflow!