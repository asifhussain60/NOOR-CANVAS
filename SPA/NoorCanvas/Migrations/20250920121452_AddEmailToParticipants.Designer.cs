// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NoorCanvas.Data;

#nullable disable

namespace NoorCanvas.Migrations
{
    [DbContext(typeof(SimplifiedCanvasDbContext))]
    [Migration("20250920121452_AddEmailToParticipants")]
    partial class AddEmailToParticipants
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NoorCanvas.Models.Simplified.Participant", b =>
                {
                    b.Property<int>("ParticipantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ParticipantId"));

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("JoinedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastSeenAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("SessionId")
                        .HasColumnType("bigint");

                    b.Property<string>("UserGuid")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("ParticipantId");

                    b.HasIndex("SessionId")
                        .HasDatabaseName("IX_Participants_SessionId");

                    b.HasIndex("SessionId", "UserGuid")
                        .HasDatabaseName("IX_Participants_SessionUser");

                    b.ToTable("Participants", "canvas");
                });

            modelBuilder.Entity("NoorCanvas.Models.Simplified.Session", b =>
                {
                    b.Property<long>("SessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("SessionId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("EndedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpiresAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HostGuid")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("HostToken")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<long?>("KSessionsId")
                        .HasColumnType("bigint");

                    b.Property<int?>("MaxParticipants")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ParticipantCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Title")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("TokenAccessCount")
                        .HasColumnType("int");

                    b.Property<string>("TokenCreatedByIp")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<DateTime?>("TokenExpiresAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TokenLastAccessedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserToken")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("SessionId");

                    b.HasIndex("HostToken")
                        .IsUnique()
                        .HasDatabaseName("UQ_Sessions_HostToken");

                    b.HasIndex("UserToken")
                        .IsUnique()
                        .HasDatabaseName("UQ_Sessions_UserToken");

                    b.HasIndex("Status", "ExpiresAt")
                        .HasDatabaseName("IX_Sessions_Status_Expires");

                    b.ToTable("Sessions", "canvas");
                });

            modelBuilder.Entity("NoorCanvas.Models.Simplified.SessionData", b =>
                {
                    b.Property<int>("DataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DataId"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DataType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("SessionId")
                        .HasColumnType("bigint");

                    b.HasKey("DataId");

                    b.HasIndex("SessionId")
                        .HasDatabaseName("IX_SessionData_SessionId");

                    b.HasIndex("SessionId", "DataType")
                        .HasDatabaseName("IX_SessionData_Session_Type");

                    b.HasIndex("SessionId", "DataType", "IsDeleted", "CreatedAt")
                        .HasDatabaseName("IX_SessionData_Query_Optimized");

                    b.ToTable("SessionData", "canvas");
                });

            modelBuilder.Entity("NoorCanvas.Models.Simplified.Participant", b =>
                {
                    b.HasOne("NoorCanvas.Models.Simplified.Session", "Session")
                        .WithMany("Participants")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Session");
                });

            modelBuilder.Entity("NoorCanvas.Models.Simplified.SessionData", b =>
                {
                    b.HasOne("NoorCanvas.Models.Simplified.Session", "Session")
                        .WithMany("SessionData")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Session");
                });

            modelBuilder.Entity("NoorCanvas.Models.Simplified.Session", b =>
                {
                    b.Navigation("Participants");

                    b.Navigation("SessionData");
                });
#pragma warning restore 612, 618
        }
    }
}
