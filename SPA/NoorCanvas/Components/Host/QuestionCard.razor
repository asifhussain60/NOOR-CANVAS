@* Question Card Component - Extracted from HostControlPanel Q&A section *@
@using Microsoft.AspNetCore.Components

<div style="padding:1rem;margin-bottom:0.75rem;border-radius:0.75rem;border:1px solid @BorderColor;background-color:@BackgroundColor;box-shadow:0 2px 4px rgba(0,0,0,0.05);transition:all 0.2s ease;position:relative;"
     onmouseover="this.style.boxShadow='0 4px 8px rgba(0,0,0,0.1)'; this.style.transform='translateY(-1px)'"
     onmouseout="this.style.boxShadow='0 2px 4px rgba(0,0,0,0.05)'; this.style.transform='translateY(0)'">
    
    <!-- Status Icon and Question Text -->
    <div style="display:flex;align-items:flex-start;gap:0.75rem;margin-bottom:0.75rem;">
        <div style="flex-shrink:0;margin-top:0.125rem;">
            <i class="@StatusIcon" style="color:@StatusColor;font-size:1.125rem;"></i>
        </div>
        <div style="flex:1;">
            <p style="margin:0;font-size:0.9rem;line-height:1.5;color:#374151;font-weight:500;">
                @Question.Text
            </p>
        </div>
    </div>
    
    <!-- User Badge and Action Buttons Row -->
    <div style="display:flex;align-items:center;justify-content:space-between;">
        <!-- User Badge -->
        <div style="display:inline-flex;align-items:center;background:linear-gradient(135deg,#3B82F6,#1D4ED8);color:white;padding:0.375rem 0.75rem;border-radius:1rem;font-size:0.75rem;font-weight:600;box-shadow:0 2px 4px rgba(59,130,246,0.3);">
            <i class="fa-solid fa-user" style="margin-right:0.375rem;font-size:0.625rem;"></i>
            @(string.IsNullOrEmpty(Question.UserName) ? "Anonymous" : Question.UserName)
        </div>
        
        <!-- Action Buttons -->
        <div style="display:flex;gap:0.5rem;">
            @if (!Question.IsAnswered)
            {
                <button @onclick="() => OnMarkAnswered.InvokeAsync(Question.Id)" 
                        style="display:flex;align-items:center;justify-content:center;width:2rem;height:2rem;background:#10B981;color:white;border:none;border-radius:0.5rem;cursor:pointer;transition:all 0.2s;box-shadow:0 2px 4px rgba(16,185,129,0.3);"
                        onmouseover="this.style.backgroundColor='#059669'; this.style.transform='scale(1.05)'"
                        onmouseout="this.style.backgroundColor='#10B981'; this.style.transform='scale(1)'"
                        title="Mark as answered">
                    <i class="fa-solid fa-check" style="font-size:0.875rem;"></i>
                </button>
            }
            <button @onclick="() => OnDelete.InvokeAsync(Question.Id)" 
                    style="display:flex;align-items:center;justify-content:center;width:2rem;height:2rem;background:#EF4444;color:white;border:none;border-radius:0.5rem;cursor:pointer;transition:all 0.2s;box-shadow:0 2px 4px rgba(239,68,68,0.3);"
                    onmouseover="this.style.backgroundColor='#DC2626'; this.style.transform='scale(1.05)'"
                    onmouseout="this.style.backgroundColor='#EF4444'; this.style.transform='scale(1)'"
                    title="Delete question">
                <i class="fa-solid fa-trash-can" style="font-size:0.875rem;"></i>
            </button>
        </div>
    </div>
</div>

@code {
    [Parameter, EditorRequired] public QuestionDto Question { get; set; } = new();
    [Parameter] public int Index { get; set; }
    [Parameter] public EventCallback<int> OnMarkAnswered { get; set; }
    [Parameter] public EventCallback<int> OnDelete { get; set; }

    private string BackgroundColor => Question.IsAnswered ? "#F9FAFB" : (Index % 2 == 0 ? "#FEFEFE" : "#F8F9FA");
    private string BorderColor => Question.IsAnswered ? "#E5E7EB" : "#E1E5E9";
    private string StatusIcon => Question.IsAnswered ? "fa-solid fa-circle-check" : "fa-solid fa-circle-question";
    private string StatusColor => Question.IsAnswered ? "#10B981" : "#3B82F6";

    public class QuestionDto
    {
        public int Id { get; set; }
        public string Text { get; set; } = "";
        public string? UserName { get; set; }
        public bool IsAnswered { get; set; }
    }
}