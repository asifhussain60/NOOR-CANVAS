<div class="w-full max-w-7xl grid grid-cols-1 lg:grid-cols-3 gap-6">

    <!-- Left Column: Main Canvas & Metadata -->
    <main class="lg:col-span-2 bg-white rounded-3xl p-6 shadow-xl border border-gray-100 flex flex-col">
        <!-- Canvas Section -->
        <div class="flex items-center justify-center space-x-2 text-[#006400] mb-4">
            <i class="fa-solid fa-chalkboard-user text-2xl"></i>
            <h3 class="poppins text-2xl font-semibold">Noor Canvas</h3>
        </div>

        <!-- Collapsible Q&A Panel -->
        <div class="bg-gradient-to-r from-[#D4AF37] to-[#C5B358] rounded-xl mb-4 transition-all duration-300 ease-in-out overflow-hidden @(isQaExpanded ? "expanded" : "")">
            <div class="flex items-center justify-center space-x-2 cursor-pointer p-4" @onclick="ToggleQaPanel">
                <i class="fa-solid fa-hand-raised text-[#006400] text-3xl"></i>
                <h4 class="poppins text-md font-semibold text-[#4B3C2B]">I have a question</h4>
                <i class="fa-solid fa-chevron-down text-sm transition-transform duration-300 @(isQaExpanded ? "rotate-180" : "")"></i>
            </div>
            <div style="height: @(isQaExpanded ? $"{qaContentHeight}px" : "0px");" class="transition-all duration-300 ease-in-out">
                <div class="space-y-4 px-4 pb-4">
                    <textarea class="w-full p-4 rounded-xl border-2 border-[#4B3C2B] focus:outline-none focus:ring-2 focus:ring-[#C5B358] inter text-[#4B3C2B] placeholder:text-gray-500" placeholder="Ask a question..." rows="3"></textarea>
                    <button @onclick="CollapseQaPanel" class="w-full py-3 px-6 rounded-xl text-white font-semibold transition-transform transform hover:scale-105 shadow-green bg-[#006400] flex items-center justify-center space-x-2">
                        <i class="fa-solid fa-paper-plane"></i>
                        <span>Submit Question</span>
                    </button>
                </div>
            </div>
        </div>

        <div @ref="leftPanel" class="flex-1 min-h-[400px] border-4 border-double border-[#D4AF37] p-8 rounded-3xl bg-[#FBF9F6] flex flex-col items-center justify-center text-center text-[#706357] text-lg font-light shadow-inner transition-all hover:shadow-lg">
            <i class="fa-solid fa-spinner text-6xl text-[#D4AF37] mb-4 animate-spin-slow"></i>
            <p class="animate-pulse-subtle">Awaiting content from the instructor...</p>
        </div>
        
        <!-- Leave Button -->
        <button @onclick="ShowLeaveModal" class="mt-6 bg-[#8B0000] text-white rounded-full py-2 px-6 flex items-center justify-center space-x-2 transition-all hover:scale-105 shadow-md">
            <i class="fa-solid fa-door-open"></i>
            <span>Leave Session</span>
        </button>

        <!-- Session Metadata -->
        <div class="mt-6 grid grid-cols-2 md:grid-cols-4 gap-4 text-center">
            <div class="p-3 bg-white rounded-xl golden-gradient shadow-md border border-[#D4AF37] hover:scale-105 transition-transform">
                <i class="fa-solid fa-users text-2xl text-[#4B3C2B] mb-1"></i>
                <p class="text-xs inter uppercase font-medium text-[#4B3C2B]">Participants</p>
                <p class="text-xl poppins font-bold text-[#4B3C2B]">@model.Participants.Count</p>
            </div>
            <div class="p-3 bg-white rounded-xl golden-gradient shadow-md border border-[#D4AF37] hover:scale-105 transition-transform">
                <i class="fa-regular fa-clock text-2xl text-[#4B3C2B] mb-1"></i>
                <p class="text-xs inter uppercase font-medium text-[#4B3C2B]">Duration</p>
                <p class="text-xl poppins font-bold text-[#4B3C2B]">@formatTime(model.Duration)</p>
            </div>
            <div class="p-3 bg-white rounded-xl golden-gradient shadow-md border border-[#D4AF37] hover:scale-105 transition-transform md:col-span-2">
                <i class="fa-solid fa-book text-2xl text-[#4B3C2B] mb-1"></i>
                <p class="text-xs inter uppercase font-medium text-[#4B3C2B]">Topic</p>
                <p class="text-md poppins font-bold text-[#4B3C2B]">@model.Topic</p>
            </div>
        </div>
    </main>

    <!-- Right Column: Q&A and Participants -->
    <aside @ref="rightPanel" class="lg:col-span-1 bg-white rounded-3xl p-6 shadow-xl border border-gray-100 flex flex-col">
        <!-- Tabs -->
        <div class="flex mb-4 border-b-2 border-gray-200">
            <button @onclick="() => SetActiveTab(1)" class="flex-1 py-3 px-2 text-center text-[#4B3C2B] poppins font-semibold border-b-2 border-transparent transition-all tab-button @(activeTab == 1 ? "active" : "")">Q&A</button>
            <button @onclick="() => SetActiveTab(2)" class="flex-1 py-3 px-2 text-center text-[#4B3C2B] poppins font-semibold border-b-2 border-transparent transition-all tab-button @(activeTab == 2 ? "active" : "")">Participants</button>
        </div>

        <!-- Q&A Content -->
        @if (activeTab == 1)
        {
            <div class="flex-1 overflow-y-auto custom-scrollbar">
                <div class="mt-2 space-y-4">
                    <h3 class="inter font-semibold text-sm text-[#4B3C2B]">Recent Questions</h3>
                    <div id="questions-list" class="flex flex-col space-y-3">
                        @foreach (var q in model.Questions)
                        {
                            <div class="flex items-start p-3 rounded-xl border border-[#D4AF37] bg-[#FBF9F6] text-[#4B3C2B] group hover:bg-[#FBF9F6] transition-colors duration-200">
                                <div class="flex flex-col items-center space-y-1 mr-3">
                                    <button class="text-[#006400] text-lg transition-colors hover:text-[#008000]">
                                        <i class="fa-solid fa-arrow-up"></i>
                                    </button>
                                    <span class="vote-count bg-[#C5B358] text-[#4B3C2B] rounded-full px-2 text-xs font-bold">@q.Votes</span>
                                </div>
                                <span class="inter text-sm w-full leading-snug">@q.Text</span>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }

        <!-- Participants Content -->
        @if (activeTab == 2)
        {
            <div class="flex-1 overflow-y-auto custom-scrollbar">
                <h3 class="inter font-semibold text-sm text-[#4B3C2B]">All Participants</h3>
                <ul class="mt-4 space-y-2">
                    @foreach (var p in model.Participants)
                    {
                        <li class="flex items-center space-x-3 p-2 bg-[#FBF9F6] rounded-lg">
                            <img src="@($"https://placehold.co/24x16/4B3C2B/FBF9F6?text={p.Country}")" class="rounded-sm" alt="Country Flag"/>
                            <span class="inter text-sm text-[#4B3C2B] font-medium">@p.Name</span>
                        </li>
                    }
                </ul>
            </div>
        }
    </aside>
</div>

<!-- Confirmation Modal -->
@if (showLeaveModal)
{
    <div class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 modal opacity-100 visible">
        <div class="bg-white p-8 rounded-2xl shadow-xl max-w-sm w-full text-center transform scale-100 transition-all">
            <h4 class="text-xl poppins font-bold text-[#4B3C2B] mb-4">Confirm Leave Session</h4>
            <p class="inter text-sm text-gray-600 mb-6">Are you sure you want to leave the live session?</p>
            <div class="flex justify-around space-x-4">
                <button @onclick="LeaveSession" class="flex-1 py-2 px-4 rounded-xl text-white font-semibold bg-[#8B0000] hover:bg-[#A52A2A] transition-colors">
                    Leave
                </button>
                <button @onclick="HideLeaveModal" class="flex-1 py-2 px-4 rounded-xl text-[#4B3C2B] font-semibold bg-gray-200 hover:bg-gray-300 transition-colors">
                    Cancel
                </button>
            </div>
        </div>
    </div>
}

@code {
    private bool isQaExpanded = false;
    private int qaContentHeight = 0;
    private int activeTab = 1; // 1 for Q&A, 2 for Participants
    private bool showLeaveModal = false;

    private ElementReference leftPanel;
    private ElementReference rightPanel;

    private Model model = new Model();
    private System.Timers.Timer timer;

    protected override async Task OnInitializedAsync()
    {
        timer = new System.Timers.Timer(1000);
        timer.Elapsed += async (sender, e) => {
            model.Duration = (long)(DateTime.Now - model.StartTime).TotalMilliseconds;
            await InvokeAsync(StateHasChanged);
        };
        timer.AutoReset = true;
        timer.Enabled = true;

        model.StartTime = DateTime.Now;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var contentDiv = rightPanel.Children.FirstOrDefault(c => c.Id == "qa-panel" || c.Id == "participants-panel");
            if (contentDiv != null)
            {
                // This is a placeholder, in a real app, you'd use JS interop
                // or a different library to handle dynamic height calculations.
                // For this example, we'll assume a fixed height for the content.
                qaContentHeight = 150; 
            }
        }
    }

    private void ToggleQaPanel()
    {
        isQaExpanded = !isQaExpanded;
    }

    private void CollapseQaPanel()
    {
        isQaExpanded = false;
    }

    private void SetActiveTab(int tab)
    {
        activeTab = tab;
    }

    private void ShowLeaveModal()
    {
        showLeaveModal = true;
    }

    private void HideLeaveModal()
    {
        showLeaveModal = false;
    }

    private void LeaveSession()
    {
        // This is where the leaving logic would go
        Console.WriteLine("Leaving session...");
        HideLeaveModal();
    }

    private string formatTime(long milliseconds)
    {
        var totalSeconds = (int)(milliseconds / 1000);
        var minutes = totalSeconds / 60;
        var seconds = totalSeconds % 60;
        return $"{minutes:D2}:{seconds:D2}";
    }

    public class Model
    {
        public DateTime StartTime { get; set; } = DateTime.Now;
        public long Duration { get; set; } = 0;
        public string Topic { get; set; } = "Chapter 3: Foundational Concepts";
        public List<Participant> Participants { get; set; } = new List<Participant>
        {
            new Participant { Name = "Ahmad Khan", Country = "US" },
            new Participant { Name = "Fatima Ali", Country = "PK" },
            new Participant { Name = "Muhammad Hassan", Country = "AE" },
            new Participant { Name = "Sara Ahmed", Country = "CA" },
            new Participant { Name = "Yusuf Omar", Country = "UK" },
            new Participant { Name = "Amira Sayed", Country = "EG" },
            new Participant { Name = "Ibrahim Khan", Country = "US" },
            new Participant { Name = "Nurul Huda", Country = "MY" },
            new Participant { Name = "Zeynep Yilmaz", Country = "TR" },
            new Participant { Name = "Omar Farooq", Country = "SA" },
            new Participant { Name = "Layla Bint Ali", Country = "IQ" },
            new Participant { Name = "Hassan Malik", Country = "PK" },
            new Participant { Name = "Aisha Abdullah", Country = "AE" },
            new Participant { Name = "Samir Aboud", Country = "LB" },
            new Participant { Name = "Nadia El-Masri", Country = "EG" },
            new Participant { Name = "Kareem Omar", Country = "US" },
            new Participant { Name = "Rayan Ahmed", Country = "UK" },
            new Participant { Name = "Lina Al-Hassan", Country = "JO" },
            new Participant { Name = "Bilal Khan", Country = "CA" },
            new Participant { Name = "Zahra Hassan", Country = "TR" },
        };
        public List<Question> Questions { get; set; } = new List<Question>
        {
            new Question { Text = "Can you re-share the ayah card?", Votes = 2 },
            new Question { Text = "How can I implement what I've learned in my daily life?", Votes = 4 },
            new Question { Text = "What is the significance of the Battle of Badr and how can we apply its lessons today? This is a very long question to test the wrapping.", Votes = 10 },
            new Question { Text = "What's the meaning of \"Tawhid\" and its importance?", Votes = 6 },
            new Question { Text = "What is the importance of \"sabr\" (patience) in Islam?", Votes = 18 },
        };
    }

    public class Participant
    {
        public string Name { get; set; }
        public string Country { get; set; }
    }

    public class Question
    {
        public string Text { get; set; }
        public int Votes { get; set; }
    }
}
