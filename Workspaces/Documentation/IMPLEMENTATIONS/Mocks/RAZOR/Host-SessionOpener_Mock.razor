@page "/hostsessionopener"

<div class="w-full max-w-sm sm:max-w-xl md:max-w-2xl lg:max-w-4xl bg-white rounded-3xl p-6 sm:p-8 space-y-6 shadow-xl border border-gray-200">
    <!-- Logo  -->
    <div class="flex justify-center mb-6 mt-8">
        <img src="https://placehold.co/120x120/E5D7A9/706357?text=Logo" alt="Logo" class="rounded-full">
    </div>

    <h1 class="poppins font-bold text-3xl sm:text-4xl text-[#006400] flex items-center justify-center space-x-2">
        <i class="fa-solid fa-user-tie text-4xl sm:text-5xl text-[#006400]"></i>
        <span>Host Session Opener</span>
    </h1>

    <!-- Session Panel -->
    <div class="w-full bg-white rounded-2xl gold-border p-6 sm:p-8 space-y-6 shadow-inner text-center">
        <div class="flex flex-col items-center space-y-4">
            <!-- Error message container -->
            <div id="error-message" class="text-red-500 text-sm poppins mb-4" style="@(string.IsNullOrEmpty(ErrorMessage) ? "display: none;" : "display: block;")">@ErrorMessage</div>
            <div class="p-4 rounded-full border-4 border-[#006400] mb-4">
                <i class="fa-solid fa-microphone text-6xl text-[#006400]"></i>
            </div>
            
            <!-- Host Controls Grid -->
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6 w-full max-w-lg mx-auto">
                <!-- Dropdown controls -->
                <div class="space-y-4">
                    <div class="w-full">
                        <label for="album-select" class="block text-sm font-medium text-gray-700 text-left mb-1">Album</label>
                        <select id="album-select" required @bind="SelectedAlbum" class="w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#D4AF37] @(string.IsNullOrEmpty(SelectedAlbum) ? "placeholder-gray-400-select" : "text-gray-800-select")">
                            <option value="">Select Album</option>
                            <option value="album1">Album 1</option>
                            <option value="album2">Album 2</option>
                        </select>
                    </div>
                    <div class="w-full">
                        <label for="category-select" class="block text-sm font-medium text-gray-700 text-left mb-1">Category</label>
                        <select id="category-select" required @bind="SelectedCategory" class="w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#D4AF37] @(string.IsNullOrEmpty(SelectedCategory) ? "placeholder-gray-400-select" : "text-gray-800-select")">
                            <option value="">Select Category</option>
                            <option value="category1">Category 1</option>
                            <option value="category2">Category 2</option>
                        </select>
                    </div>
                    <div class="w-full">
                        <label for="session-select" class="block text-sm font-medium text-gray-700 text-left mb-1">Session</label>
                        <select id="session-select" required @bind="SelectedSession" class="w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#D4AF37] @(string.IsNullOrEmpty(SelectedSession) ? "placeholder-gray-400-select" : "text-gray-800-select")">
                            <option value="">Select Session</option>
                            <option value="session1">Session 1</option>
                            <option value="session2">Session 2</option>
                        </select>
                    </div>
                </div>

                <!-- Host Inputs -->
                <div class="space-y-4">
                    <div class="w-full">
                        <label for="session-date" class="block text-sm font-medium text-gray-700 text-left mb-1">Date</label>
                        <input type="date" id="session-date" required @bind="SessionDate" class="w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#D4AF37] text-gray-800">
                    </div>
                    <div class="w-full">
                        <label for="session-time" class="block text-sm font-medium text-gray-700 text-left mb-1">Start Time (EST)</label>
                        <input type="text" id="session-time" required placeholder="HH:MM AM/PM" @bind="StartTime" @oninput="FormatTime" class="w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#D4AF37] text-gray-800 placeholder-gray-400">
                    </div>
                    <div class="w-full">
                        <label for="session-duration" class="block text-sm font-medium text-gray-700 text-left mb-1">Duration (minutes)</label>
                        <input type="number" id="session-duration" required @bind="SessionDuration" placeholder="Enter duration" class="w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#D4AF37] text-gray-800 placeholder-gray-400">
                    </div>
                </div>
            </div>

            <div class="flex justify-center w-full mt-6">
                <button id="openSessionBtn" @onclick="OpenSession" class="w-full max-w-xs inter font-semibold px-6 py-3 rounded-full bg-[#006400] text-white transition-colors flex items-center justify-center space-x-2 shadow-md @(IsFormValid() ? "" : "disabled:bg-gray-400 disabled:cursor-not-allowed")" disabled="@(!IsFormValid())">
                    <i class="fa-solid fa-arrow-right"></i>
                    <span>Open Session</span>
                </button>
            </div>
        </div>
    </div>
    
    <!-- Link Panel -->
    <div class="w-full bg-white rounded-2xl gold-border p-6 sm:p-8 space-y-4 shadow-inner">
        <h3 class="poppins font-bold text-lg sm:text-xl text-[#006400]">Session URL</h3>
        <div class="flex flex-col sm:flex-row items-center justify-between space-y-2 sm:space-y-0 sm:space-x-4">
            <span id="sessionUrl" class="inter text-sm md:text-base font-semibold text-gray-900 break-all">https://localhost:9091/user/hostlanding</span>
            <button id="copyButton" @onclick="CopyUrlToClipboard" class="inter font-semibold px-4 py-2 rounded-full bg-[#D4AF37] text-white hover:bg-[#C5B358] transition-colors flex items-center space-x-2 shadow-md">
                <i class="fa-solid fa-copy"></i>
                <span>Copy Link</span>
            </button>
        </div>
        <div class="flex justify-center">
            <button id="openWaitingRoomBtn" class="w-full max-w-xs inter font-semibold px-6 py-3 rounded-full bg-[#006400] text-white hover:bg-[#004d00] transition-colors flex items-center justify-center space-x-2 shadow-md mt-4">
                <i class="fa-solid fa-hourglass-half"></i>
                <span>Open Waiting Room</span>
            </button>
        </div>
    </div>
</div>

@code {
    private string SelectedAlbum { get; set; }
    private string SelectedCategory { get; set; }
    private string SelectedSession { get; set; }
    private DateTime SessionDate { get; set; } = DateTime.Now;
    private string StartTime { get; set; }
    private int? SessionDuration { get; set; }
    private string ErrorMessage { get; set; }

    private bool IsFormValid()
    {
        if (string.IsNullOrEmpty(SelectedAlbum) || 
            string.IsNullOrEmpty(SelectedCategory) || 
            string.IsNullOrEmpty(SelectedSession) || 
            SessionDate == default || 
            string.IsNullOrEmpty(StartTime) || 
            SessionDuration == null)
        {
            return false;
        }

        if (!System.Text.RegularExpressions.Regex.IsMatch(StartTime, @"^(0?[1-9]|1[0-2]):[0-5][0-9]\s?(AM|PM)$", System.Text.RegularExpressions.RegexOptions.IgnoreCase))
        {
            return false;
        }

        return true;
    }

    private void OpenSession()
    {
        if (IsFormValid())
        {
            ErrorMessage = string.Empty;
            // Handle session opening logic here
            Console.WriteLine("Session opened!");
        }
        else
        {
            ErrorMessage = "Please fill out all fields with valid information.";
        }
    }

    private void FormatTime(ChangeEventArgs e)
    {
        var value = e.Value?.ToString().Trim().ToUpper() ?? string.Empty;
        if (value.Length > 2 && (value.EndsWith("AM") || value.EndsWith("PM")) && value[value.Length - 3] != ' ')
        {
            StartTime = value.Insert(value.Length - 2, " ");
        }
        else
        {
            StartTime = value;
        }
    }

    private async Task CopyUrlToClipboard()
    {
        await JSRuntime.InvokeVoidAsync("navigator.clipboard.writeText", "https://localhost:9091/user/hostlanding");
    }

    [Inject]
    public IJSRuntime JSRuntime { get; set; }
}
